---
#- hosts: allnodes
#  become: true
#  vars:
#    pkg_name: python3
#  tasks:
#  - name: Update the repo cache and apps
#    ansible.builtin.apt:
#      name: "*"
#      state: latest
#  - name: Install {{pkg_name}}
#    package: name={{pkg_name}} state=present
#      
- hosts: allnodes
  become: true
  vars:
    # container_count: 4
    # default_container_name: docker
    default_container_image: ubuntu
    # default_container_command: sleep 1d
  tasks:
  - name: Update the repo cache and apps
    ansible.builtin.apt:
      name: "*"
      state: latest
  - name: Install required system packages
    apt:
      update_cache: yes
      pkg:
        - python3
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - python3-setuptools
        #  - virtualenv
  - name: Add Docker GPG apt Key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
  - name: Add Docker Repository
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu jammy stable
      state: present
  - name: Update apt and install docker-ce
    apt:
      name: docker-ce
      state: latest
      update_cache: true
  - name: Install Docker Module for Python
    pip:
      name: docker
  - name: Pull default Docker image
    community.docker.docker_image:
      name: "{{ default_container_image }}"
      source: pull

#  - name: Create default containers
#    community.docker.docker_container:
#      name: "{{ default_container_name }}{{ item }}"
#      image: "{{ default_container_image }}"
#      command: "{{ default_container_command }}"
#      state: present
#    with_sequence: count={{ container_count }}

- hosts: master
  become: true
  tasks:
  - name: Set master name
    ansible.builtin.command: hostnamectl set-hostname master.xyzzy.loc

- hosts: worker1
  become: true
  tasks:
  - name: Set worker1 name
    ansible.builtin.command: hostnamectl set-hostname worker1.xyzzy.loc
      

- hosts: worker2
  become: true
  tasks:
  - name: Set worker2 name
    ansible.builtin.command: hostnamectl set-hostname worker2.xyzzy.loc

- hosts: allnodes
  become: true
  tasks:
  - name: copy hosts file with IP addresses
    ansible.builtin.copy:
      src: etchosts
      dest: /etc/hosts
# We have docker configured, let's start with Kubernetes
  - name: Disable swap and add kernel parameters
    shell: |
      swapoff -a
      sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
  - name: Setup containerd
    shell: |
     echo overlay      >  /etc/modules-load.d/containerd.conf
     echo br_netfilter >> /etc/modules-load.d/containerd.conf
     modprobe overlay
     modprobe br_netfilter
  - name: Setup kubernetes.conf
    shell: |
      echo net.bridge.bridge-nf-call-ip6tables = 1 >  /etc/sysctl.d/kubernetes.conf
      echo net.bridge.bridge-nf-call-iptables = 1  >> /etc/sysctl.d/kubernetes.conf
      echo net.ipv4.ip_forward = 1
  - name: Reload changes
    shell: sysctl --system

#
  - name: Install Containerd Runtime
    apt:
      update_cache: yes
      pkg:
        - curl
        - gnupg2
        - software-properties-common
        - apt-transport-https
        - ca-certificates
        - containerd.io
# Lets get started on Kubernetes
  - name: Make sure the gpg is gone
    ansible.builtin.file:
      state: absent
      path: /etc/apt/trusted.gpg.d/kubernetes-xenial.gpg
  - name: Add the gpg key for kubernetes
    shell: |
      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmour -o /etc/apt/trusted.gpg.d/kubernetes-xenial.gpg
      apt-add-repository -y "deb http://apt.kubernetes.io/ kubernetes-xenial main"
    args:
      warn: false

# Install kubectl, kubeadm, kubelet
  - name: Install kubectl, kubeadm, kubelet
    apt:
      update_cache: yes
      pkg: 
        - kubelet
        - kubeadm
        - kubectl
  - name: Hold kubeadm
    ansible.builtin.dpkg_selections:
      name: kubeadm
      selection: hold

  - name: Hold kubelet
    ansible.builtin.dpkg_selections:
      name: kubelet
      selection: hold

  - name: Hold kubectl
    ansible.builtin.dpkg_selections:
      name: kubectl
      selection: hold

- hosts: master
  become: true
  tasks:
  - name: Init control plane
    shell: |
      kubeadm init --control-plane-endpoint=master

